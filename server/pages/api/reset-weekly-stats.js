"use strict";(()=>{var e={};e.id=392,e.ids=[392],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},1593:(e,t,r)=>{r.r(t),r.d(t,{config:()=>u,default:()=>l,routeModule:()=>c});var s={};r.r(s),r.d(s,{default:()=>d});var n=r(1802),o=r(7153),a=r(6249),i=r(1053);async function d(e,t){if("POST"===e.method)try{let r=(await i.Z).db("test"),s=`::ffff:${e.headers["x-forwarded-for"]||e.socket.remoteAddress}`;await r.collection("userdatas").updateOne({userId:s},{$set:{"weekly.tasksAdded":0,"weekly.tasksRemoved":0,lastUpdated:new Date}},{upsert:!0}),t.status(200).json({message:"Weekly statistics reset successfully"})}catch(e){console.error(e),t.status(500).json({error:"Internal server error"})}else t.status(405).json({error:"Method Not Allowed"})}let l=(0,a.l)(s,"default"),u=(0,a.l)(s,"config"),c=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/reset-weekly-stats",pathname:"/api/reset-weekly-stats",bundlePath:"",filename:""},userland:s})},1053:(e,t,r)=>{r.d(t,{Z:()=>a});var s=r(8013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let n=process.env.MONGODB_URI,o={serverApi:{version:s.ServerApiVersion.v1,strict:!0,deprecationErrors:!0}},a=new s.MongoClient(n,o).connect()},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=1593);module.exports=r})();
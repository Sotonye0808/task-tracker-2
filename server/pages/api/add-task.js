"use strict";(()=>{var e={};e.id=124,e.ids=[124],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},2856:(e,t,r)=>{r.r(t),r.d(t,{config:()=>c,default:()=>l,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>u});var s=r(1802),a=r(7153),o=r(6249),d=r(1053),i=r(8013);async function u(e,t){if("POST"===e.method)try{let r=(await d.Z).db("test"),n=`::ffff:${e.headers["x-real-ip"]||e.connection.remoteAddress}`,{title:s,description:a,date:o,reminder:u}=e.body,l={_id:new i.ObjectId,title:s,description:a,date:new Date(o),reminder:u,createdAt:new Date};await r.collection("userdatas").updateOne({userId:n},{$push:{tasks:l},$inc:{"daily.tasksAdded":1,"weekly.tasksAdded":1,"monthly.tasksAdded":1},$set:{lastUpdated:new Date}},{upsert:!0}),t.status(200).json({message:"Task added successfully"})}catch(e){console.error(e),t.status(500).json({error:"Internal server error"})}else t.status(405).json({error:"Method Not Allowed"})}let l=(0,o.l)(n,"default"),c=(0,o.l)(n,"config"),p=new s.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/add-task",pathname:"/api/add-task",bundlePath:"",filename:""},userland:n})},1053:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(8013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let s=process.env.MONGODB_URI,a={serverApi:{version:n.ServerApiVersion.v1,strict:!0,deprecationErrors:!0}},o=new n.MongoClient(s,a).connect()},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=2856);module.exports=r})();
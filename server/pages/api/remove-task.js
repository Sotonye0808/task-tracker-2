"use strict";(()=>{var e={};e.id=52,e.ids=[52],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},3937:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>l,routeModule:()=>f});var n={};t.r(n),t.d(n,{default:()=>u});var o=t(1802),s=t(7153),a=t(6249),i=t(1053),d=t(8013);async function u(e,r){if("DELETE"===e.method)try{let t=(await i.Z).db("test"),n=`::ffff:${e.headers["x-forwarded-for"]||e.socket.remoteAddress}`,{taskId:o}=e.query,s=new d.ObjectId(o);await t.collection("userdatas").updateOne({userId:n},{$pull:{tasks:{_id:s}},$inc:{"daily.tasksRemoved":1,"weekly.tasksRemoved":1,"monthly.tasksRemoved":1},$set:{lastUpdated:new Date}},{upsert:!0}),r.status(200).json({message:"Task removed successfully"})}catch(e){console.error(e),r.status(500).json({error:"Internal server error"})}else r.status(405).json({error:"Method Not Allowed"})}let l=(0,a.l)(n,"default"),c=(0,a.l)(n,"config"),f=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/remove-task",pathname:"/api/remove-task",bundlePath:"",filename:""},userland:n})},1053:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(8013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let o=process.env.MONGODB_URI,s={serverApi:{version:n.ServerApiVersion.v1,strict:!0,deprecationErrors:!0}},a=new n.MongoClient(o,s).connect()},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=3937);module.exports=t})();